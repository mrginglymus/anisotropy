%OPTOSPLIT
%
%   Given a calibration file, splits a 3-dimensional timelapse of images
%   (X,Y,t) into a 4-dimensional timelapse of images (X,Y,t,c).

function [ imout ] = optosplit( varargin )

% check inputs

numvarargs = length( varargin );

if numvarargs == 0
    % open alignement file as generated by java script
    [ name, path ] = uigetfile( '.csv',...
        'Please select the alignment file', '/Volumes/WAC26' );
    alignFile = strcat( path, name );
    [ name, path ] = uigetfile( '.tif',...
        'Please select the image file', '/Volumes/WAC26' );
    imFile = strcat( path, name );
    [ name, path ] = uiputfile( '.tif',...
        'Please select output file', '/Volumes/WAC26' );
    outFile = strcat( path, name );
elseif numvarargs == 3
    alignFile = varargin{ 1 };
    imFile = varargin{ 2 };
    outFile = varargin{ 3 };
else
    error( 'optosplit takes two input arguments - file locations for the alignment file and the image file' );
end

alignment = csvread( alignFile );

r1 = alignment(1,:);
r2 = alignment(2,:);

if isequal( exist( outFile ), 2 )
    delete( outFile )
end


timeSteps = length( imfinfo( imFile ) );
h = waitbar(0,'Splitting Images');
for t = 1:timeSteps
    im = imread( imFile, t );
    i1 = imcrop( im, r1 );
    i2 = imcrop( im, r2 );
    imwrite( i1, outFile, 'WriteMode', 'Append' );
    imwrite( i2, outFile, 'WriteMode', 'Append' );
    waitbar( t/timeSteps, h )
end
close(h)

tiffFile = Tiff( outFile, 'r+' );
tiffFile.setTag( 'ImageDescription', sprintf('ImageJ=1.46k\nimages=%i\nslices=2\nframes=%i\nhyperstack=true\nloop=false', timeSteps*2, timeSteps) )
tiffFile.rewriteDirectory();
tiffFile.close();
    


end

function [ imout ] = imcrop( im, r )

imout = im(r(2):r(2)+r(3), r(1):r(1)+r(4));

end
    
            
            